openapi: 3.0.3
info:
  title: Iota
  description: |-
    You can find out more about Swagger at [https://swagger.io](https://swagger.io).
  version: 1.0.0
tags:
  - name: devices
    description: Operations about devices
  - name: actions
    description: Operations about actions
  - name: rooms
    description: Operations about rooms
  - name: user
    description: Operations about user
paths:
  /rooms:
    post:
      tags:
        - rooms
      summary: Add a new room
      description: Add a new room
      operationId: addRoom
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
                - name
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'          
        '405':
          description: Invalid input
  /rooms/{roomID}:
    get:
      tags:
        - rooms
      summary: Get a room by ID
      description: ''
      operationId: getRoomByID
      parameters:
        - name: roomID
          in: path
          description: ID of room to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'          
        '400':
          description: Invalid ID supplied
        '404':
          description: Room not found
    put:
      tags:
        - rooms
      summary: Update a room (its name)
      description: ''
      operationId: updateRoom
      parameters:
        - name: roomID
          in: path
          description: ID of the room to be updated
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
                - name
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'  
        '405':
          description: Invalid input
    delete:
      tags:
        - rooms
      summary: Delete a room
      description: ''
      operationId: deleteRoom
      parameters:
        - name: roomID
          in: path
          description: ID of room to be deleted
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid room ID
  /devices:
    post:
      tags:
        - devices
      summary: Add a new device
      operationId: addDevice
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
                displayName:
                  type: string
                  description: Device's original name
                customName:
                  type: string
                  description: Device's custom name, defined by the user
                roomID:
                  type: integer
                  format: int64
              required:
                - id
                - displayName
                - customName
                - roomID
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Room'          
        '405':
          description: Invalid input
  /devices/?category={category}:
    get:
      tags:
        - devices
      summary: Get devices of specific category
      operationId: getDevicesByCategory
      parameters:
        - name: category
          in: query
          description: Category of devices to return
          required: true
          schema:
            $ref: '#/components/schemas/Category'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'          
        '400':
          description: Invalid ID supplied
        '404':
          description: Category not found
  /devices/?room={roomID}:
    get:
      tags:
        - devices
      summary: Get devices of specific room
      operationId: getDevicesByRoom
      parameters:
        - name: roomID
          in: query
          description: Room ID of devices to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'          
        '400':
          description: Invalid ID supplied
        '404':
          description: Category not found
  /devices/{deviceID}:
    get:
      tags:
        - devices
      summary: Get a device by ID
      description: ''
      operationId: getDeviceByID
      parameters:
        - name: deviceID
          in: path
          description: ID of device to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'          
        '400':
          description: Invalid ID supplied
        '404':
          description: Device not found
    put:
      tags:
        - devices
      summary: Update a device (its name and/or its room)
      description: ''
      operationId: updateDevice
      parameters:
        - name: deviceID
          in: path
          description: ID of the device to be updated
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                customName:
                  type: string
                room:
                  type: integer
                  format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'  
        '405':
          description: Invalid input
    delete:
      tags:
        - devices
      summary: Delete a device
      description: ''
      operationId: deleteDevice
      parameters:
        - name: deviceID
          in: path
          description: ID of device to be deleted
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid device ID
  /devices/{deviceID}/actions:
    get:
      tags:
        - actions
      summary: Get device's actions
      operationId: getDeviceActions
      parameters:
        - name: deviceID
          in: path
          description: ID of device whose actions are to be returned
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceAction'          
        '400':
          description: Invalid ID supplied
        '404':
          description: Device not found
  /devices/{deviceID}/actions/{actionID}:
    post:
      tags:
        - actions
      summary: Perform action on device
      operationId: performAction
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                status:
                  type: string
              required:
                - status
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'          
        '405':
          description: Invalid input
components:
  schemas:
    Category:
      type: string
      enum: 
        - light
        - media
        - climate
    Action:
      type: object
      properties:
        id:
          type: string
          example: range
        type:
          type: string
          example: range
        required:
          type: array
          description: Action's required properties
          nullable: true
          items:
            type: string
          example: ['min','max','step']
    DeviceAction:
      type: object
      properties:
        id:
          type: string
          description: Action's ID
          example: range
        name:
          type: string
          example: Brightness
        properties:
          type: object
          description: Action's required properties
          nullable: true
          example: { min: 0, max: 100, step: 0 }
        status:
          type: string
          example: 20
    Device:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 123
        category:
          $ref: '#/components/schemas/Category'
        displayName:
          type: string
          example: Default name
        customName:
          type: string
          example: My custom name
        room:
          type: integer
          format: int64
          description: Room's ID
          example: 0
        actions:
          type: array
          items:
            $ref: '#/components/schemas/DeviceAction'
    Room:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        devices:
          type: array
          items:
            $ref: '#/components/schemas/Device'
